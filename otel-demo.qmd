---
title: "Otel Demonstration"
format: html
---

## Preparation

1.  Download and install Docker Desktop from: <https://www.docker.com/products/docker-desktop/>.

2.  In a terminal, pull and start a Jaeger container.

``` sh
docker run --rm --name jaeger \
 -p 16686:16686 \
 -p 4317:4317 \
 -p 4318:4318 \
 -p 5778:5778 \
 -p 9411:9411 \
 jaegertracing/jaeger:2.9.0
```

3. Docker Desktop will now show the running container with link to web UI at <http://localhost:16686>.

4. Add following line to `.Renviron` (may need sudo to modify).
This can't just be set within an R session as needs to apply to all new processes.

```sh
OTEL_TRACES_EXPORTER=http
```

~~

Also add to `.Rprofile` (only required for dev Shiny version):

```r
options(shiny.otel.bind = "all")
```
~~

5. In R, install mirai, dev promises, dev Shiny.

```r
pak::pak(c("mirai", "rstudio/promises@bc1ca10", "rstudio/shiny@92584b2"))
```

## Demonstration

1. Open up Docker Desktop.

2. Start up Jaeger in a terminal:

```sh
docker run --rm --name jaeger \
 -p 16686:16686 \
 -p 4317:4317 \
 -p 4318:4318 \
 -p 5778:5778 \
 -p 9411:9411 \
 jaegertracing/jaeger:2.9.0
```
3. Open web UI: <http://localhost:16686>

4. Shiny / mirai integrated example

Run any of the vignette demos at <https://mirai.r-lib.org/articles/v02-promises.html>, e.g.:

```r
library(shiny)
library(bslib)
library(mirai)

ui <- page_fluid(
  p("The time is ", textOutput("current_time", inline = TRUE)),
  hr(),
  numericInput("n", "Sample size (n)", 1000),
  numericInput("delay", "Seconds to take for plot", 1),
  input_task_button("btn", "Plot uniform distribution"),
  plotOutput("plot")
)

server <- function(input, output, session) {
  output$current_time <- renderText({
    invalidateLater(1000)
    format(Sys.time(), "%H:%M:%S %p")
  })

  task <- ExtendedTask$new(
    function(...) mirai({Sys.sleep(y); runif(x)}, ...)
  ) |> bind_task_button("btn")

  observeEvent(input$btn, task$invoke(x = input$n, y = input$delay))

  output$plot <- renderPlot(hist(task$result()))

}

# run app using 1 local daemon
daemons(1)

# automatically shutdown daemons when app exits
onStop(function() daemons(0))

shinyApp(ui = ui, server = server)
```

Close app.

In the Jaeger web UI <http://localhost:16686>:

- `Service` select `R`
- `Operation` select `mirai::mirai`
- click `Find Traces`

#### Result

A `reactive_update` with 11 child spans.

![](otel-screenshot.png)

- Reactive update creates a mirai ExtendedTask, and initially returns
- Evaluation of the mirai on daemon takes 1s
- Triggers another `reactive_update` which updates the plot

